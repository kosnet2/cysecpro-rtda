version: "3.8"

services:
    mongos:
        image: 'bitnami/mongodb-sharded:latest'
        volumes:
            - nnids_data:/data/db1
        environment:
            - MONGODB_SHARDING_MODE=mongos
            - MONGODB_CFG_PRIMARY_HOST=mongo2
            - MONGODB_CFG_REPLICA_SET_NAME=cfgreplicaset
            - MONGODB_REPLICA_SET_KEY=replicasetkey123
            - MONGODB_ROOT_PASSWORD=password123
        networks:
            - nnids_backend

    mongo1:
        image: 'bitnami/mongodb-sharded:latest'
        volumes:
            - nnids_data:/data/db2
        environment:
            - MONGODB_SHARDING_MODE=shardsvr
            - MONGODB_MONGOS_HOST=mongos
            - MONGODB_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_REPLICA_SET_KEY=replicasetkey123
            - MONGODB_REPLICA_SET_NAME=shard0
        networks:
            - nnids_backend

    mongo2:
        image: 'bitnami/mongodb-sharded:latest'
        volumes:
            - nnids_data:/data/db2
        environment:
            - MONGODB_SHARDING_MODE=configsvr
            - MONGODB_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_REPLICA_SET_KEY=replicasetkey123
            - MONGODB_REPLICA_SET_NAME=config-replicaset
        networks:
            - nnids_backend
    
    mongo_client:
        image: kosnet2/nnids_mongo_client:1.0.0-alpine3.12
        volumes:
            - sniffer_data:/pcapLogs
        networks:
            - nnids_backend
        depends_on:
            - mongos
            - mongo1
            - mongo2
        environment:
            - SNIFFER_PCAP_LOG_DIR=/pcapLogs/
            - MONGODB_URI="mongodb://root:password123@mongo1:27017"
            - MONGODB_DB=nnids
            - MONGODB_COLLECTION=pcapLogs
            - SERVER_PORT=3000
        deploy:
            replicas: 2

    
    notifier:
        image: kosnet2/nnids_notifier:1.0.0-alpine3.12
        volumes:
            - sniffer_data:/pcapLogs
        networks:
            - nnids_backend
        depends_on: 
            - mongo_client
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
    
    sniffer:
        image: kosnet2/nnids_sniffer:1.0.0-alpine3.12
        networks:
            - hostnet
        volumes: 
            - sniffer_data:/pcapLogs
        depends_on:
            - notifier
        environment:
            - SNIFFER_IFACE=wlo1
            - SNIFFER_PCAP_LOG_SIZE=10
            # - SNIFFER_FILTER="udp or tcp"
            # - SNIFFER_PCAP_LOG_DIR="/pcapLogs/"
        deploy:
            replicas: 1

    mongo_watch:
        image: kosnet2/nnids_mongo_watch:latest
        networks:
            - nnids_backend
        depends_on:
            - mongo1
            - mongo2
            - mongo3
        environment:
            - MONGODB_URI=mongodb://root:password123@mongo1:27017/nnids?authSource=admin
            - MONGODB_DB="nnids"
            - MONGODB_COLLECTION="pcapLogs"
        deploy:
            replicas: 1

    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "8080:8080"
        stop_grace_period: 1m30s
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints:
                    - "node.role==manager"

networks:
    nnids_backend:
        driver:
            overlay
    hostnet:
        external: true
        name: host

volumes:
    nnids_data:
    sniffer_data:

            